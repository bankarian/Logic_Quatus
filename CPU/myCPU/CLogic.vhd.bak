library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity CLogic is
port(
IR : in std_logic_vector(7 downto 0);
SM,MOVA,MOVB,MOVC,ALU,NOT0,RSR,RSL,JMP,JZ,JC,IN0,OUT0,NOP,HALT,Z,C : in std_logic;
S : out std_logic_vector(3 downto 0);
RAA,RWBA,MADD: out std_logic_vector(1 downto 0);
IN_PC,LD_PC,WE,M,F_BUS,FL_BUS,FR_BUS,LD_IR,DL,XL,HALTO,INO,OUTO : out std_logic);
end CLogic;

architecture behav of CLogic is
begin
	S <= IR(7 downto 4);
	RWBA <= IR(3 downto 2);
	RAA <= IR(1 downto 0);
	MADD <="01" when MOVC='1' else
			"10" when MOVB='1' else 
			"00";
	IN_PC <=(not SM) or (JC and (not C)) or (JZ and (not Z)) or NOP;
	LD_PC <=(not SM) or JMP or (JC and C) or (JZ and Z) or NOP;
	XL <=SM and MOVB;
	DL <= (not SM) or (SM and (MOVC or JMP or (JC and C) or (JZ and Z)));
	LD_IR <=not SM;
	F_BUS <= MOVA or MOVB or ALU or NOT0;
	FL_BUS <=RSL;
	FR_BUS <=RSR;
	WE <= not(SM and (MOVA or MOVC or ALU or RSR or RSL or IN0 or NOT0));
	OUTO <= (not SM) or JMP or MOVC or (JZ and Z) or (JC and C);
	M <='1' when (ALU or NOT0)='1' else '0';
	INO <=IN0;
	HALTO <=HALT;
end behav;